To Read

https://github.com/kradio3/google-interview-university

http://juliachencoding.blogspot.com/2016/04/skip-list.html

https://www.geeksforgeeks.org/amazon-interview-preparation/
https://www.geeksforgeeks.org/amazon-interview-experience-set-262-for-sde1/

Some leetcode questions to work on first:
1. reverse half linked list
2. priority queue
3. number of island
4. flying ticket
5. unsorted slots with numbers
6. Sum query 2nd mutable
7. word search in matrix
8. course schedule




https://leetcode.com/discuss/interview-question/124626/Google-onsite-interview-questions/?fbclid=IwAR1b0WUuIfkU5xavuY80DWrWru72JaQV5Gnlo-1OYnZyWFBXuoe9DGkRf3o

Given a contiguous sequence of numbers in which each number repeats thrice, there is exactly one missing number. Find the missing number.
eg: 11122333 : Missing number 2
11122233344455666 Missing number 5

Given a compressed string in which a number followed by [] indicate how many times those characters occur, decompress the string
Eg. : a3[b2[c1[d]]]e will be decompressed as abcdcdbcdcdbcdcde.
Assume the string is well formed and number will always be followed by a [].

Given a tree representation of a html parsed output, wherein every block is a node in the tree, find if two html docs contain the same text.

struct Node {
       string value;
       bool isMetadata;
       vector<Node*> children;
};
For eg, consider the two documents

sample

Hello world

will be represented as Node1: value sample, children: isMetadata: true Node2: value: children:

isMetadata: true Node3: value:

: children: Hello world isMetadata: true Node4: value Hello world isMetadata: false

and a second document

Hello world

and both documents are equivalent since they contain the same data.

Note: the case of both documents fitting in memory is trivial, since it is just walking this tree list, consolidating data and comparing. 
As a follow up, solve the case where the whole documents may not be able to fit in memory.
4. Given a 2D matrix M X N, support two operations:
Query(row1, col1, row2, col2) such that I get the sum of all numbers in the rectangle ((row1, col1), (row1, col2), (row2, col1), (row2, col2)) and
Update(row, col) to a new number

And query is a very frequent operation and update is a rare operation, so query should be really fast, but update can be slower.

Follow up: How would you solve this in a distributed fashion

Verify if a given matrix is a Toeplitz matrix:
Follow up, assume that the whole matrix cannot be fit in memory and should be read from a file, 
assume that a few rows and all columns can be read in, how to verify?


TODO: Winter Vacation

173. Binary Search Tree Iterator
706. Design HashMap
Implement Min Heap
3. Longest Substring Without Repeating Characters


https://instant.1point3acres.com/thread/91694


Remove Duplicates from Sorted Array & II Remove Duplicates from Sorted List & II Remove Element Remove Nth Node From End of List Reverse Linked Llist II 
Rotate List Substring with Concatenation of All Words Swap Nodes in Pairs 2. Two pointers go from the middle to the bottom: 
The general interview appears in the case of a single linked list, so this type of question is mainly the array question. 3Sum 3Sum 
Closest 4Sum Container With Most Water Sort Colors Trapping Rain Water Two Sum Binary search (will discuss it in a separate section) 
3. Two pointers control two different arrays or linked lists: generally appear on topics related to merge. Add Binary Add Two Numbers Merge Sorted Array

Merge Two Sorted Lists Multiply Strings Partition List Peking 2 interview questions summary (3) - Permutation and Combination basic questions, but very important. 
Itâ€™s no surprise that you encountered any questions during the interview. PIE, CC150 and Leetcode all contain such questions. It is necessary to cook these questions. 
Basically, the solution to this type of problem is DFS. The general framework of the program is very similar, except that the code is slightly modified 
according to the requirements of the topic . Of course, each question has a different solution, but you should unify the solution to this type of problem according to your own preferences .
 Familiar with such topics, the understanding of DFS (will be discussed in a separate section) will be very profound. Basically, the general DFS topic should be no problem. 
 Whether it is arranging or combining, there is a variant of this type of problem that requires no repeated output. PIE and CC150 did not mention the corresponding solution, 
 everyone should have a good understanding. If there is no corresponding preparation, it is a problem that is easy to be embarrassed when interviewing . 
 Permutation input is not repeated: Permutations, CC150 9.5, PIE Chapter7 Permutations of a String input has duplicates, output cannot be repeated: 
 Permutations II Next Permutation: Classic algorithm, back

 460. LFU Cache
 289. Game of Life
 212. Word Search II

